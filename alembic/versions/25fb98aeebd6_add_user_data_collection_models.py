"""Add user data collection models

Revision ID: 25fb98aeebd6
Revises: 
Create Date: 2025-08-17 21:52:05.514864

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '25fb98aeebd6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('active_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('app_name', sa.String(length=255), nullable=True),
    sa.Column('app_path', sa.String(length=1000), nullable=True),
    sa.Column('app_version', sa.String(length=100), nullable=True),
    sa.Column('app_category', sa.String(length=100), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('window_title', sa.String(length=500), nullable=True),
    sa.Column('window_state', sa.String(length=50), nullable=True),
    sa.Column('cpu_usage', sa.Float(), nullable=True),
    sa.Column('memory_usage', sa.Float(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_active_applications_id'), 'active_applications', ['id'], unique=False)
    op.create_table('browser_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('browser_name', sa.String(length=50), nullable=True),
    sa.Column('browser_version', sa.String(length=50), nullable=True),
    sa.Column('url', sa.String(length=2000), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('visit_count', sa.Integer(), nullable=True),
    sa.Column('visit_time', sa.DateTime(), nullable=True),
    sa.Column('last_visit_time', sa.DateTime(), nullable=True),
    sa.Column('page_transition', sa.String(length=100), nullable=True),
    sa.Column('visit_duration', sa.Integer(), nullable=True),
    sa.Column('content_analyzed', sa.Boolean(), nullable=True),
    sa.Column('content_summary', sa.Text(), nullable=True),
    sa.Column('content_embedding', sa.JSON(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_browser_history_id'), 'browser_history', ['id'], unique=False)
    op.create_table('screen_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('screenshot_path', sa.String(length=1000), nullable=True),
    sa.Column('screenshot_data', sa.LargeBinary(), nullable=True),
    sa.Column('activity_description', sa.Text(), nullable=True),
    sa.Column('activity_category', sa.String(length=100), nullable=True),
    sa.Column('activity_confidence', sa.Float(), nullable=True),
    sa.Column('detected_apps', sa.JSON(), nullable=True),
    sa.Column('detected_text', sa.JSON(), nullable=True),
    sa.Column('detected_objects', sa.JSON(), nullable=True),
    sa.Column('screen_resolution', sa.String(length=50), nullable=True),
    sa.Column('color_mode', sa.String(length=20), nullable=True),
    sa.Column('screenshot_embedding', sa.JSON(), nullable=True),
    sa.Column('activity_embedding', sa.JSON(), nullable=True),
    sa.Column('captured_at', sa.DateTime(), nullable=True),
    sa.Column('analyzed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_screen_activities_id'), 'screen_activities', ['id'], unique=False)
    op.create_table('user_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('file_path', sa.String(length=1000), nullable=True),
    sa.Column('file_name', sa.String(length=255), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('file_type', sa.String(length=50), nullable=True),
    sa.Column('file_category', sa.String(length=100), nullable=True),
    sa.Column('content_preview', sa.Text(), nullable=True),
    sa.Column('content_embedding', sa.JSON(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('modified_date', sa.DateTime(), nullable=True),
    sa.Column('accessed_date', sa.DateTime(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('discovered_at', sa.DateTime(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_files_file_path'), 'user_files', ['file_path'], unique=False)
    op.create_index(op.f('ix_user_files_id'), 'user_files', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_files_id'), table_name='user_files')
    op.drop_index(op.f('ix_user_files_file_path'), table_name='user_files')
    op.drop_table('user_files')
    op.drop_index(op.f('ix_screen_activities_id'), table_name='screen_activities')
    op.drop_table('screen_activities')
    op.drop_index(op.f('ix_browser_history_id'), table_name='browser_history')
    op.drop_table('browser_history')
    op.drop_index(op.f('ix_active_applications_id'), table_name='active_applications')
    op.drop_table('active_applications')
    # ### end Alembic commands ###
